///////////////////////////////////////////////////////////
//  Personal.cs
//  Implementation of the Class Personal
//  Generated by Enterprise Architect
//  Created on:      22-may.-2020 17:37:55
//  Original author: Haskell
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Data;
using System.Data.SqlClient;



public class Personal : Persona {

	private CargoEmpleado _cargo;
	private Direccion _direccion;
	private Fecha _fechaIngreso;
	private Fecha _fechaNacimiento;
	private int _legajo;
	private int _documento;
	private Oficina _oficina;
	private Telefono _telefono;
	private int _superior;
	private string _contrasena;

	public CargoEmpleado Cargo
	{
		get
		{
			if (_cargo==null) {
				_cargo = new CargoEmpleado();
			}
			return _cargo;
		}
		set
		{
			_cargo = value;
		}
	}

	public Direccion Direccion
	{
		get
		{
			return _direccion;
		}
		set
		{
			_direccion = value;
		}
	}


	public Fecha FechaIngreso
	{
		get
		{
			return _fechaIngreso;
		}
		set
		{
			_fechaIngreso = value;
		}
	}

	public Fecha FechaNacimiento
	{
		get
		{
			return _fechaNacimiento;
		}
		set
		{
			_fechaNacimiento = value;
		}
	}

	public int Legajo
	{
		get
		{
			return _legajo;
		}
		set
		{
			_legajo = value;
		}
	}

	public Oficina Oficina
	{
		get
		{
			return _oficina;
		}
		set
		{
			_oficina = value;
		}
	}

	public Telefono Telefono
	{
		get
		{
			return _telefono;
		}
		set
		{
			_telefono = value;
		}
	}

	public int Superior
	{
		get
		{
			return _superior;
		}
		set
		{
			_superior = value;
		}
	}

	public string Contrasena
	{
		get
		{
			return _contrasena;
		}
		set
		{
			_contrasena = value;
		}
	}

	public int Documento { get => _documento; set => _documento = value; }

	public DataTable ComprobarUsuario(string legajo, string contrasena)
	{
		DataTable resultado = (new personal()).ComprobarUsuario(legajo, contrasena);
		DataRow row = resultado.Rows[0];
		this.Nombre = row["Nombre"].ToString();
		this.Apellido = row["Apellido"].ToString();
		this.Legajo = int.Parse(row["Legajo"].ToString());
		this.Cargo.ID = int.Parse(row["FK_Cargo"].ToString());
		this.Cargo.Descripcion = row["Cargo"].ToString();
		this.Contrasena = row["Contrasena"].ToString();
		this.Documento = int.Parse(row["Documento"].ToString());
		return resultado;
	}

	public DataTable VerInformacionCompleta(string legajo)
	{
		return (new personal()).TraerInformacionCompleta(legajo);
	}

	public void altaPersonal()
	{
		string fechaNac = "'"+FechaNacimiento.Año + "-" + FechaNacimiento.Mes + "-" + FechaNacimiento.Dia+"'";
		string fechaIng = "'"+FechaIngreso.Año + "-" + FechaIngreso.Mes + "-" + FechaIngreso.Dia+"'";
		AltaPersonal alta = new AltaPersonal();
		if( !(alta.sp_ComprobarSiExistePersonal(Nombre,Apellido,Email)))
		{
			alta.sp_AltaPersonal(Nombre, Apellido, Documento, Email, Genero.ID, fechaNac, fechaIng, Direccion.Calle, Direccion.Numero, Direccion.TipoDireccion.ID, Direccion.Barrio.ID, Cargo.ID, Oficina.ID, Telefono.TipoTelefono.ID, Telefono.Numero, Telefono.Empresa, Superior, Contrasena);

		}
		else
		{
			throw new Exception();
		}
	}

	public void modificarPersonal()
	{
		ModificarPersonal modificar = new ModificarPersonal();
		modificar.sp_ModificarPersonal(Legajo, Nombre, Apellido, Email, Genero.ID, Direccion.Calle, Direccion.Numero, Direccion.TipoDireccion.ID, Direccion.Barrio.ID, Cargo.ID, Oficina.ID, Telefono.TipoTelefono.ID, Telefono.Numero, Superior);
	}
	public void modificarPassword()
	{
		ModificarPersonal modificar = new ModificarPersonal();
		modificar.sp_ModificarPersonalPassword(Legajo,Contrasena);

	}

	public DataTable VerTodoPersonal()
	{
		return new VerTodoPersonal().sp_VerTodoPersonal();
	}

	public void DesvincularPersonal(int legajo)
	{
		new DesvincularPersonal().BajaPersonal(legajo);
	}

}//end Personal